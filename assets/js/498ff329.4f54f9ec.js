"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[800],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,b=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6299:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={title:"Basics"},c=void 0,l={unversionedId:"database/basics",id:"database/basics",title:"Basics",description:"Framelix runs on MariaDB (Mysql) by default.",source:"@site/docs/database/basics.md",sourceDirName:"database",slug:"/database/basics",permalink:"/framelix-docs/docs/database/basics",draft:!1,tags:[],version:"current",frontMatter:{title:"Basics"},sidebar:"tutorialSidebar",previous:{title:"Database",permalink:"/framelix-docs/docs/category/database"},next:{title:"Storables",permalink:"/framelix-docs/docs/category/storables"}},u={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Executing queries",id:"executing-queries",level:2},{value:"Fetch data",id:"fetch-data",level:2}],p={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Framelix runs on MariaDB (Mysql) by default."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"All your db connections and credentials are stored in the ",(0,o.kt)("a",{parentName:"p",href:"/framelix-docs/docs/basics/configuration"},"configuration"),", which is already\ncreated after set up."),(0,o.kt)("p",null,'A connection have an "id", which is the key in the configuration. The ',(0,o.kt)("inlineCode",{parentName:"p"},"default")," connection is the standard for all\nfurther db actions. You can add more database connection with different connection ids."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'....\n"database": {\n    "default": {\n      "host": "localhost",\n      "username": "root",\n      "password": "",\n      "database": "demo",\n      "port": 3306,\n      "socket": ""\n    },\n    "anotherdb": {\n      "host": "localhost",\n      "username": "root",\n      "password": "",\n      "database": "anotherdb",\n      "port": 3306,\n      "socket": ""\n    }\n}\n....\n')),(0,o.kt)("p",null,"Here you have 2 connections, one with id ",(0,o.kt)("inlineCode",{parentName:"p"},"default")," and one with ",(0,o.kt)("inlineCode",{parentName:"p"},"anotherdb"),"."),(0,o.kt)("h2",{id:"executing-queries"},"Executing queries"),(0,o.kt)("p",null,"If you ever need to execute raw queries, you can do that."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"// using default db\n$db = \\Framelix\\Framelix\\Db\\Mysql::get();\n// raw\n$db->query(\"INSERT ...\");\n// just a nicer way to insert something\n$db->insert(\"table\", ['name' => 'foo']);\n// simple update\n$db->update(\"table\", ['name' => 'foo'], 'id = {0}', [3018]);\n// simple delete\n$db->delete(\"table\",'id = {0}', [3018]);\n\n// using anotherdb db\n$db = \\Framelix\\Framelix\\Db\\Mysql::get('anotherdb');\n$db->query(\"INSERT ...\");\n")),(0,o.kt)("h2",{id:"fetch-data"},"Fetch data"),(0,o.kt)("p",null,"If you ever need to fetch raw data, you can do that too."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'// using default db\n$db = \\Framelix\\Framelix\\Db\\Mysql::get();\n// returns an array-array with column names as indexes\n$db->fetchAssoc("SELECT ...");\n// same as above but with parameters automatically escaped properly\n$db->fetchAssoc("SELECT ... FROM xxx WHERE name = {0}", [\'brainfoolong\']);\n// same as fetchAssoc, but only returns the first entry of it\n$db->fetchAssocOne("SELECT ...");\n// returns an array-array without column names\n$db->fetchArray("SELECT ...");\n// returns an array with the first column as value\n$db->fetchColumn("SELECT ...");\n// returns the first column of the first row\n$db->fetchOne("SELECT ...");\n')))}f.isMDXComponent=!0}}]);